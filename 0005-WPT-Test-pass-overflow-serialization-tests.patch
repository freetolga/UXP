From 1a780063f31a648282521e6d594838705e01a8f8 Mon Sep 17 00:00:00 2001
From: erixreyes <ebreyes2@up.edu.ph>
Date: Wed, 2 Jul 2025 02:59:56 +0800
Subject: [PATCH 5/7] WPT Test: pass overflow serialization tests

---
 layout/style/Declaration.cpp                     |   9 +++++++--
 layout/style/nsComputedDOMStyle.cpp              |   5 +++--
 ...TFramework,Version=v4.0.AssemblyAttributes.cs |   4 ++++
 .../LzmaAlone.csproj.AssemblyReference.cache     | Bin 0 -> 4382 bytes
 ...TFramework,Version=v4.0.AssemblyAttributes.cs |   4 ++++
 .../LzmaAlone.csproj.AssemblyReference.cache     | Bin 0 -> 4538 bytes
 6 files changed, 18 insertions(+), 4 deletions(-)
 create mode 100644 other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Debug/.NETFramework,Version=v4.0.AssemblyAttributes.cs
 create mode 100644 other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Debug/LzmaAlone.csproj.AssemblyReference.cache
 create mode 100644 other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Release/.NETFramework,Version=v4.0.AssemblyAttributes.cs
 create mode 100644 other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Release/LzmaAlone.csproj.AssemblyReference.cache

diff --git a/layout/style/Declaration.cpp b/layout/style/Declaration.cpp
index dc770d8ce3..f38e5f0851 100644
--- a/layout/style/Declaration.cpp
+++ b/layout/style/Declaration.cpp
@@ -1026,9 +1026,14 @@ Declaration::GetPropertyValueInternal(
         *data->ValueFor(eCSSProperty_overflow_x);
       const nsCSSValue &yValue =
         *data->ValueFor(eCSSProperty_overflow_y);
-      if (xValue == yValue)
+      if (xValue == yValue) {
         xValue.AppendToString(eCSSProperty_overflow_x, aValue, aSerialization);
-      break;
+      } else { 
+        xValue.AppendToString(eCSSProperty_overflow_x, aValue, aSerialization);
+        aValue.Append(char16_t(' '));
+        yValue.AppendToString(eCSSProperty_overflow_y, aValue, aSerialization);
+      }
+      break; 
     }
     case eCSSProperty_text_decoration: {
       const nsCSSValue *decorationColor =
diff --git a/layout/style/nsComputedDOMStyle.cpp b/layout/style/nsComputedDOMStyle.cpp
index 9b579e8e89..ca3ff9bed1 100644
--- a/layout/style/nsComputedDOMStyle.cpp
+++ b/layout/style/nsComputedDOMStyle.cpp
@@ -3302,7 +3302,7 @@ nsComputedDOMStyle::DoGetScrollbarWidth()
 {
   RefPtr<nsROCSSPrimitiveValue> val = new nsROCSSPrimitiveValue;
   val->SetIdent(
-    nsCSSProps::ValueToKeywordEnum(StyleUserInterface()->mScrollbarWidth,
+    nsCSSProps::ValueToKeywordEnum(StyleUIReset()->mScrollbarWidth,
                                    nsCSSProps::kScrollbarWidthKTable));
   return val.forget();
 }
@@ -4759,11 +4759,12 @@ nsComputedDOMStyle::DoGetOverflow()
 
   // If the values differ, return a CSSValueList with both.
   RefPtr<nsDOMCSSValueList> valueList = GetROCSSValueList(false);
+  // for x
   RefPtr<nsROCSSPrimitiveValue> valX = new nsROCSSPrimitiveValue;
   valX->SetIdent(nsCSSProps::ValueToKeywordEnum(display->mOverflowX,
                                                 nsCSSProps::kOverflowKTable));
   valueList->AppendCSSValue(valX.forget());
-
+  // for y
   RefPtr<nsROCSSPrimitiveValue> valY = new nsROCSSPrimitiveValue;
   valY->SetIdent(nsCSSProps::ValueToKeywordEnum(display->mOverflowY,
                                                 nsCSSProps::kOverflowKTable));
diff --git a/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Debug/.NETFramework,Version=v4.0.AssemblyAttributes.cs b/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Debug/.NETFramework,Version=v4.0.AssemblyAttributes.cs
new file mode 100644
index 0000000000..9e65edd817
--- /dev/null
+++ b/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Debug/.NETFramework,Version=v4.0.AssemblyAttributes.cs
@@ -0,0 +1,4 @@
+// <autogenerated />
+using System;
+using System.Reflection;
+[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.0", FrameworkDisplayName = ".NET Framework 4")]
diff --git a/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Debug/LzmaAlone.csproj.AssemblyReference.cache b/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Debug/LzmaAlone.csproj.AssemblyReference.cache
new file mode 100644
index 0000000000000000000000000000000000000000..533071dbe3902257facc8b56859984b29841257a
GIT binary patch
literal 4382
zcmd5=%Wl&^6!kz0ZBmIx5mE(<N^FarHc8V4RXox{tI|+4QHzA7$Z;pdiXX*~RzXN*
z%MZ{665<osb<KiL=mt@#|A54b1#@kWYbSPMD_(S>Bu-|0@40jDIdhY1Xo6uF^r%wi
zch;)QuXbwuh9v5mp|wo5x>Dz#>w<z0HNDLr6xbY_&*f(qd0sI@O_!x6yDQ5G5ev-8
z;qvJA*%(4-j838vnD7l)c!fOC5qTN;NG`}bde)L;T;@2gQs!I?TmS>-Vc;$>aMX(p
z;U+Oe2la}^$TuhN`R%E~`6ska*UwCEW8IK6bqV4jkD2L;C7YIxmsD(-x**R?Z(2=R
z64!C3uC=kc)GU>RqF9`tUCbA7Zeh{!gfbUs7_{o!LBTMv(v&;=i>H;wMs4jSU+Wkq
zR`@x`W24b+(OuweXWh7dyzt}<A|P(ywqmX{S7Oi`pBvvMVUv$^3Md<Htb;xO`I)gj
zlSE!~P=}_`&RigkV*fN^lcNYZx-FdJz|LwkLU&cnJg+%6Q_3>B3K{5E(@rgrMX(t#
zY&I}~;&Z-7=#GPpt!QdX+Ou@QBxTsMz4mG_6k_rF<Hpgg(@dFK%(xa`D{>+`lopO1
zcnwzbrmxIs+U#ncFVIq57EEDqLBlGqs<S^LsyfnLer^bNe<!oyBockm^&wGLtnqjh
z2)Om|-)EpPsi3TzDVXm`71RvKR!|t*$rv?XpiBWDF-hgY9ju^LUj%8<YaD`3i(XNB
zMSR#Jj8H)$Ae0WF5Sny1tF8;GA&5Y9qbKc2fYJJ?XgVIsQ2HWt!;Q6SDOi`p;o`jO
z8r!l|Q&KQn5yZEWx|b;AZk3#JZLX*$*7tSEz%{HNNFq)KHE0%+7ZlByveKn#L&!=G
zf=C_pH6biHD+cQ}S>(w!dwTD<6xNKy47l5Qyomh>R*Szr+~4{QI@*t*c2feI5@<{k
z$|#_vLP{{i)KQ9du#9fF#YpZ*OGWLY<1(q}Z8t{ybg8|QNvw$o+^x!KYgR9Jw|p%@
zpyBZsFK92HXN%CqM|aY&%Hz)0k@0ZuV4uT2JxGuHc;pFScyK=X?aNf43kf|%!s(+V
z>q7kW0WUH6;{hH_Aliq(Eom`m6jb9fF{q!+LG{9j)6b-OHdA9YELyr`b`o)V(CJwY
zCq&d=5cKD~$29s6g!2OoK}IK3O;@B{RbW+lKMNn!mgu|Qg=>3}+G^Vq^n*RaF#iEf
CbgGvC

literal 0
HcmV?d00001

diff --git a/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Release/.NETFramework,Version=v4.0.AssemblyAttributes.cs b/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Release/.NETFramework,Version=v4.0.AssemblyAttributes.cs
new file mode 100644
index 0000000000..9e65edd817
--- /dev/null
+++ b/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Release/.NETFramework,Version=v4.0.AssemblyAttributes.cs
@@ -0,0 +1,4 @@
+// <autogenerated />
+using System;
+using System.Reflection;
+[assembly: global::System.Runtime.Versioning.TargetFrameworkAttribute(".NETFramework,Version=v4.0", FrameworkDisplayName = ".NET Framework 4")]
diff --git a/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Release/LzmaAlone.csproj.AssemblyReference.cache b/other-licenses/7zstub/src/CS/7zip/Compress/LzmaAlone/obj/Release/LzmaAlone.csproj.AssemblyReference.cache
new file mode 100644
index 0000000000000000000000000000000000000000..060ea485ea23acbe33ef1e4ac9b073b6283afd82
GIT binary patch
literal 4538
zcmd5=T~E_s6z;2_u#xzIF(G<E;w`p=Z473J9|MITlduI$Y_fFa9X9I+_5(6wg17zw
zxiB&Q1n;=^!k@s6k%a$X;*}S^r|nzXt=-zJ7nCr%y{G3q=RN0n-ovh;35H?Nqe_|I
zS*tF;+NtpylBjEj)-u`ZN}YeM3kp8e^frG`U~_Cfm!DnadBqSlU6z{ct}G)&JTNDR
z%cI+8V+f%!x`;+#!FPe-74nOY$jit_azp;2XDvy_Wsc)2WzNOG1u$?P2JQj_N2Ayf
zZW2fIqEXQp`Q+q1zdcnr|Af}5{mk?>)(uHhmmnYVGc#SWWYf~|l8P-;7v!1gO{*zO
z;yUiswKi6lnx&FZ6pQn-i}?c1Ei5{bQ04*+gI0YzC>RD-nsSGK@wC#|sI9%^YaPSH
z3P0yWY&5z(x(42M){X1O3s24<0}=)vE9OdbB?i6mh4F0?Hu=b)fU@D{Iymy5pBXzc
zDdaT=b!Zvw$_2_O_AetgIf{^@+rl{k?5aj1bgg36dCl>eQkBtFs6fA-c6xyr!Dhf^
zvw;aTpYu6FcN}bNMN?bSo}~*WX~UlFwXMNXh{x}b8%MWJGiB;A<9d9p$cg+=S~z~-
zHQ3FYzBZ#}v%7h|KwEWLFonSl4OU)PXMaR=b!52w+z{dZPG-YNB>J-JL!z!+<MAkv
zaO>f}&p>0+L0Pv_u-;QD=oyf$pfI+RF>1a*nF29llFEZSSV6144AP?4I3%4Gy`uDr
z#IUb0LIsI{P&$M{Xwu!Rx-O`OAOg{ip0XzaM*F9t>3Aqd>5I?}H`l7AU|kZ2%k!@5
zY|BzjNx^JI5Z_AbUZRw{RdUMpxuTj_-`6Dr*RXydi8vY5pj#+jP&8x8N|&Y$AuBxy
zB6ZX^gs|kS7_8gG$dhgM^xknPY#51|aCh){8T%2e7Jq%Xzx5k*v>!q3p#(N1FqkBi
zQ9w(DlwgRdqZI968QpN3kvx%>irPoVWm3`GZjScpQhO(pToVzvTb0w+tX}SJ`9^}k
zz~gUT&|W^z7Ga8yo}|Ib<IdNS@o?^7U%);yNKg29<OyJSa6b9%%T!<r2|Y!^>7yi@
zLj3fBC^7lt0Uk^sI)}g`X)$ONRO2!+sGrP1_reuto=Np=rp{_uv~<brB;xd-)3Y2-
zh^Vh1=)dzG(=Pir5KhVLx<R*1sG6=wyQ;vd@_rWHs4dZVzYF)ak=kn83-pb>!Z7~<
DW0%Ns

literal 0
HcmV?d00001

-- 
2.43.0.windows.1

